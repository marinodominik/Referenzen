
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.*;
import net.proteanit.sql.DbUtils;
import tanktool3.javaconnect;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Emre
 */
public class AddNewCar extends javax.swing.JFrame {

    /**
     * Creates new form AddNewCar
     */
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    
    public AddNewCar() {
        initComponents();
        conn=javaconnect.ConnecrDb();
        //fill smthing in combobos or table
        Update_table(0);
        FillCombobox();
        get_fuelID();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table_car = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        carname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        kmstatus = new javax.swing.JTextField();
        saveNewCarIntoDatabase = new javax.swing.JButton();
        refreshTable = new javax.swing.JButton();
        deleteCarFormDatabase = new javax.swing.JButton();
        close = new javax.swing.JButton();
        fuel_combobox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        licenseplate = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table_car.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table_car);

        jLabel1.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel1.setText("Car Name:");

        jLabel2.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel2.setText("Fuel:");

        jLabel3.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel3.setText("Kilometer Status:");

        saveNewCarIntoDatabase.setFont(new java.awt.Font("AppleGothic", 0, 11)); // NOI18N
        saveNewCarIntoDatabase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        saveNewCarIntoDatabase.setText("Save");
        saveNewCarIntoDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveNewCarIntoDatabaseActionPerformed(evt);
            }
        });

        refreshTable.setFont(new java.awt.Font("AppleGothic", 0, 11)); // NOI18N
        refreshTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        refreshTable.setText("Refresh");
        refreshTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTableActionPerformed(evt);
            }
        });

        deleteCarFormDatabase.setFont(new java.awt.Font("AppleGothic", 0, 11)); // NOI18N
        deleteCarFormDatabase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/interface.png"))); // NOI18N
        deleteCarFormDatabase.setText("Delete");
        deleteCarFormDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCarFormDatabaseActionPerformed(evt);
            }
        });

        close.setFont(new java.awt.Font("AppleGothic", 0, 11)); // NOI18N
        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/error.png"))); // NOI18N
        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        fuel_combobox.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N

        jLabel4.setFont(new java.awt.Font("AppleGothic", 0, 13)); // NOI18N
        jLabel4.setText("License Plate:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(carname)
                            .addComponent(kmstatus)
                            .addComponent(fuel_combobox, 0, 153, Short.MAX_VALUE)
                            .addComponent(licenseplate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(deleteCarFormDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(saveNewCarIntoDatabase, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(refreshTable, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(close)
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(carname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(fuel_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(kmstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(licenseplate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(refreshTable)
                            .addComponent(saveNewCarIntoDatabase)
                            .addComponent(deleteCarFormDatabase)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(close)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        fuel_combobox.getAccessibleContext().setAccessibleName("Add a new Car!");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //search in db which fuelid has the fuel
    public int get_fuelID(){
        int fuelID=0;
        //select name from combobox
        String fuelname = (String)fuel_combobox.getSelectedItem();
        try{
            //search in combobox the id with the fuelname
            String sql="SELECT FUEL.id\n" +
            "FROM FUEL\n" +
            "where fuelname='"+fuelname+"'";
            
            pst=conn.prepareStatement(sql);
            //execute the query
            rs=pst.executeQuery();
            
            
            //take the result and set it on the fuelID
            while(rs.next()){
                String str=rs.getString("id");
                fuelID=Integer.parseInt(str);
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        System.out.println(fuelID);
        return fuelID;
    }
    
    //search in db with the username
    public int get_userID(String username){
        //take the username from the getter
      username = Login_JFrame.get_username();
      //intializize userid
      int userID=0;
      
      try{
          //search id in db
          String sql="SELECT UserData.id\n" +
                  "From UserData\n" +
                  "where UserData.username='"+username+"'";
          pst=conn.prepareStatement(sql);
          rs=pst.executeQuery();
          
          //set userid
          while(rs.next()){
              String str = rs.getString("id");
              userID = Integer.parseInt(str);
          }
          
          
          
      }catch(Exception e){
          JOptionPane.showMessageDialog(null, e);
      }
      System.out.println(userID);
      return userID;
  }

    
    //update the table userId and print only the specific userdate into the table
    private void Update_table(int userID){
        try{
            //search all the information
        userID=get_userID("");
        String sql= "SELECT CAR.CarName,FUEL.Fuelname,CAR.kmstatus,CAR.licenseplate\n" +
        "FROM CAR\n" +
        "JOIN FUEL on CAR.fuelID=FUEL.id\n" +
        "JOIN UserData on CAR.userID=UserData.id WHERE UserData.username='"+Login_JFrame.get_username()+"'";
        pst=conn.prepareStatement(sql);
        //set it on the resultset
        rs=pst.executeQuery();
        //take the resultset into the database and set all information to it
        table_car.setModel(DbUtils.resultSetToTableModel(rs));
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    
    }
    
    //save a new car
    private void saveNewCarIntoDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveNewCarIntoDatabaseActionPerformed
      //intializize userid and fuelid
        int userID=get_userID("");
       int fuelID=get_fuelID();
       
       //dont need a if else clase if there is an new car entry with the same attributes
       //because liceneplate is unique and so we do not need to prove it
       try{
           //set all car information of the new car in the car fleet into the databse
           String sql="Insert into CAR(CarName,kmstatus,userID,fuelID,licenseplate) VALUES(?,?,"+userID+","+fuelID+",?)";
           
           pst=conn.prepareStatement(sql);
           pst.setString(1, carname.getText());
           pst.setString(2,kmstatus.getText());
           pst.setString(3, licenseplate.getText());
           pst.execute();
           
           JOptionPane.showMessageDialog(null, "Succesfully saved "+carname.getText()+" as new Car! Please click on the 'REFRESH' button to update the table view!");
           
       }catch(Exception e){
           //if liceneplate already forgiven
           JOptionPane.showMessageDialog(null, e);
       }
       
        
    }//GEN-LAST:event_saveNewCarIntoDatabaseActionPerformed

    private void refreshTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTableActionPerformed
        //updateTable
        Update_table(0);
        
    }//GEN-LAST:event_refreshTableActionPerformed

    
     //delete car from the car fleet from user
    private void deleteCarFormDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCarFormDatabaseActionPerformed
        try{
            //delete the information where the car has the unique data licenseplate and the userid
            //that you cant delete cars form another user
            String sql="DELETE FROM CAR\n" +
            "where (CarName=? AND kmstatus=?\n" +
            "AND userID="+get_userID("")+" AND fuelID="+get_fuelID()+" AND licenseplate=?) ";
            
            pst=conn.prepareStatement(sql);
            pst.setString(1, carname.getText());
            pst.setString(2,kmstatus.getText());
            pst.setString(3, licenseplate.getText());
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(null, "Succesfully deleted "+carname.getText()+" from ! Please click on the 'Refresh' Button to update the tableview!  ");
            
        }catch(Exception e){
            //not in the database or already deleted and you push the button twice and and forget the update the table
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteCarFormDatabaseActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        MainWindow s=new MainWindow();
        s.setVisible(true);
        close();
        
    }//GEN-LAST:event_closeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNewCar().setVisible(true);
            }
        });
    }
    
    public void close(){
        
        setVisible(false);

        //WindowEvent winClosingEvent =  new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        //Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }
    
    //fill fuel in combobox
   public void FillCombobox(){
        
        try{
            //select all fulname form db
            String sql="SELECT fuelname FROM FUEL";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            
            //loop that add all fuelnames into the combobox
            while(rs.next()){
                String name= rs.getString("fuelname");
                fuel_combobox.addItem(name);
            }
            
        
        }catch(Exception e){
            
        }
        
        }
    
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField carname;
    private javax.swing.JButton close;
    private javax.swing.JButton deleteCarFormDatabase;
    private javax.swing.JComboBox<String> fuel_combobox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField kmstatus;
    private javax.swing.JTextField licenseplate;
    private javax.swing.JButton refreshTable;
    private javax.swing.JButton saveNewCarIntoDatabase;
    private javax.swing.JTable table_car;
    // End of variables declaration//GEN-END:variables
}
